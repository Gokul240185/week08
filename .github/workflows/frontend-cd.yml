# week08/.github/workflows/frontend-cd.yml
name: CD - Deploy Frontend to AKS

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Immutable image tag to deploy (e.g., abcd123)'
        required: true
      product_api_ip:
        description: 'External IP of Product Service (e.g., http://X.X.X.X:8000)'
        required: true
        default: 'http://<ip_address>:8000'
      order_api_ip:
        description: 'External IP of Order Service (e.g., http://Y.Y.Y.Y:8001)'
        required: true
        default: 'http://<ip_address>:8001'
      aks_cluster_name:
        description: 'AKS cluster name'
        required: true
        default: '<aks_name>'
      aks_resource_group:
        description: 'AKS resource group'
        required: true
        default: '<resource_group>'
      acr_login_server:
        description: 'ACR login server (e.g., myregistry.azurecr.io)'
        required: true
        default: '<your_registry>.azurecr.io'
      acr_name:
        description: 'ACR registry NAME (no domain, e.g., myregistry)'
        required: true
        default: '<your_registry>'

jobs:
  deploy_frontend:
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Use REGISTRY NAME here (not the login server)
      - name: Login to ACR
        run: az acr login --name "${{ inputs.acr_name }}"

      # Optional: keep your simple string replacement, but align the message with the file you actually edit
      - name: Inject backend IPs into frontend/main.js
        run: |
          sed -i "s|_PRODUCT_API_URL_|${{ inputs.product_api_ip }}|g" frontend/main.js
          sed -i "s|_ORDER_API_URL_|${{ inputs.order_api_ip }}|g" frontend/main.js
          echo "--- main.js (after inject) ---"
          grep -E "http://|https://" -n frontend/main.js || true

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ inputs.aks_resource_group }}
          cluster-name: ${{ inputs.aks_cluster_name }}

      # Deploy the immutable image built by CI
      - name: Update deployment image
        run: |
          APP_NS=default
          DEPLOY=frontend
          IMAGE="${{ inputs.acr_login_server }}/frontend:${{ inputs.image_tag }}"

          echo "Setting image to: $IMAGE"
          kubectl set image -n "$APP_NS" deploy/"$DEPLOY" "$DEPLOY"="$IMAGE" --record
          kubectl rollout status -n "$APP_NS" deploy/"$DEPLOY" --timeout=120s
          echo "Deployed image: $IMAGE"
          echo "Rollback tip: kubectl rollout undo -n $APP_NS deploy/$DEPLOY"

      - name: Logout
        if: always()
        run: az logout
