# week08/.github/workflows/backend-cd.yml
name: CD - Deploy Backend Services to AKS

on:
  workflow_dispatch:
    inputs:
      aks_cluster_name:
        description: 'AKS cluster name'
        required: true
        default: 'gokul'
      aks_resource_group:
        description: 'AKS resource group'
        required: true
        default: 'week8'
      acr_name:
        description: 'ACR registry NAME (no domain, e.g., myregistry)'
        required: true
        default: 'gokul'
      acr_login_server:
        description: 'ACR login server (e.g., myregistry.azurecr.io)'
        required: true
        default: 'gokul.azurecr.io'
      product_image_tag:
        description: 'Immutable tag for product_service (e.g., abcd123)'
        required: true
      order_image_tag:
        description: 'Immutable tag for order_service (e.g., abcd123)'
        required: true

jobs:
  deploy_backend:
    runs-on: ubuntu-latest
    environment: Production

    # Expose IPs for downstream workflows (e.g., frontend CD)
    outputs:
      PRODUCT_API_IP: ${{ steps.capture.outputs.product_ip }}
      ORDER_API_IP:   ${{ steps.capture.outputs.order_ip }}

    env:
      NS: backend   # change if your manifests use a different namespace

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS credentials
        run: |
          az aks get-credentials \
            --resource-group "${{ inputs.aks_resource_group }}" \
            --name "${{ inputs.aks_cluster_name }}" \
            --overwrite-existing

      - name: Attach ACR (idempotent)
        run: |
          az aks update \
            --name "${{ inputs.aks_cluster_name }}" \
            --resource-group "${{ inputs.aks_resource_group }}" \
            --attach-acr "${{ inputs.acr_name }}"

      - name: Ensure namespace
        run: kubectl create namespace "$NS" --dry-run=client -o yaml | kubectl apply -f -

      - name: Apply backend infra
        run: |
          kubectl -n "$NS" apply -f k8s/configmaps.yaml
          kubectl -n "$NS" apply -f k8s/secrets.yaml
          kubectl -n "$NS" apply -f k8s/product-db.yaml
          kubectl -n "$NS" apply -f k8s/order-db.yaml

      - name: Apply backend deployments/services
        run: |
          kubectl -n "$NS" apply -f k8s/product-service.yaml
          kubectl -n "$NS" apply -f k8s/order-service.yaml

      # Critical: set deploy
